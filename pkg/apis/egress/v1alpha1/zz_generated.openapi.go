// +build !ignore_autogenerated

// Code generated by openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.Egress":             schema_pkg_apis_egress_v1alpha1_Egress(ref),
		"github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.EgressMapper":       schema_pkg_apis_egress_v1alpha1_EgressMapper(ref),
		"github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.EgressMapperSpec":   schema_pkg_apis_egress_v1alpha1_EgressMapperSpec(ref),
		"github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.EgressMapperStatus": schema_pkg_apis_egress_v1alpha1_EgressMapperStatus(ref),
		"github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.EgressSpec":         schema_pkg_apis_egress_v1alpha1_EgressSpec(ref),
		"github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.EgressStatus":       schema_pkg_apis_egress_v1alpha1_EgressStatus(ref),
		"github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.Vip":                schema_pkg_apis_egress_v1alpha1_Vip(ref),
		"github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.VipSpec":            schema_pkg_apis_egress_v1alpha1_VipSpec(ref),
		"github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.VipStatus":          schema_pkg_apis_egress_v1alpha1_VipStatus(ref),
	}
}

func schema_pkg_apis_egress_v1alpha1_Egress(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "Egress is the Schema for the egresses API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.EgressSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.EgressStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.EgressSpec", "github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.EgressStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_egress_v1alpha1_EgressMapper(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "EgressMapper is the Schema for the egressmappers API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.EgressMapperSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.EgressMapperStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.EgressMapperSpec", "github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.EgressMapperStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_egress_v1alpha1_EgressMapperSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "EgressMapperSpec defines the desired state of EgressMapper",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_egress_v1alpha1_EgressMapperStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "EgressMapperStatus defines the observed state of EgressMapper",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_egress_v1alpha1_EgressSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "EgressSpec defines the desired state of Egress",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_egress_v1alpha1_EgressStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "EgressStatus defines the observed state of Egress",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_egress_v1alpha1_Vip(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "Vip is the Schema for the vips API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.VipSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.VipStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.VipSpec", "github.com/mkimuram/egress-mapper/pkg/apis/egress/v1alpha1.VipStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_egress_v1alpha1_VipSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "VipSpec defines the desired state of Vip",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_egress_v1alpha1_VipStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "VipStatus defines the observed state of Vip",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}
